version: '3'
services:
  mysql:
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_USER: 'root'
      MYSQL_ROOT_PASSWORD: 'example'
    volumes:
      - ./sql:/docker-entrypoint-initdb.d/
    ports:
      - 3306:3306
  mongo:
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example
      - MONGO_INITDB_DATABASE=foodthings
    volumes:
      - ./database/db-init:/docker-entrypoint-initdb.d
  mongo-express:
    image: mongo-express
    ports:
      - 8081:8081
    restart: always
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
    depends_on:
      - mongo
  backend:
    build: ./backend
    volumes:
      - ./backend/src:/app/src
  frontend:
    build: ./frontend
    volumes:
      - ./frontend/pages:/app/pages
  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 80:80
  datamining:
    build: ./datamining
    ports:
      - 5000:5000
    restart: always
    volumes:
      - ./datamining/src:/datamining/code
  backendtest:
    build: ./backend
    volumes:
      - ./backend/src:/app/src
    command: npm test   
  cadvisor:
    image: google/cadvisor:latest
    container_name: cadvisor
    ports:
    - 8080:8080
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro
    depends_on:
    - nginx
    - frontend
    - datamining
    - backend
    - mongo
    - mysql